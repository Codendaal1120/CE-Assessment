@model CE.Assessment.Web.Models.HomeViewModel
@{
    ViewData["Title"] = "Home Page";
}
@await Component.InvokeAsync("NToastNotify")

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="text-center">
        <h2 class="display-4 error">Error</h2>
        <p class="error">@Model.ErrorMessage</p>
    </div>
}
else
{
    <div class="text-center">
        <h1 class="display-4">Top 5 products sold</h1>

        <table id="products">
            <thead>
                <tr>
                    <th>Product no</th>
                    <th>Gtin</th>
                    <th>Description</th>
                    <th>Qty</th>
                    <th>Update stock (to 25)</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Records.Count(); i++)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => Model.Records[i].ProductNo)</td>
                        <td>@Html.DisplayFor(modelItem => Model.Records[i].Gtin)</td>
                        <td>@Html.DisplayFor(modelItem => Model.Records[i].Description)</td>
                        <td>@Html.DisplayFor(modelItem => Model.Records[i].Quantity)</td>
                        <td>
                            @using (Html.BeginForm())
                            {
                                @Html.Hidden("productNo", @Model.Records[i].ProductNo)
                                <input class="btn btn-primary btn-xs delBtn" type="submit" formaction="Update" formmethod="post" value="Update" />
                            }                            
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
