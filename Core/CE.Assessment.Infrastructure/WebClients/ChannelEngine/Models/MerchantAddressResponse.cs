/////////////////////////////////////////////////////////////////
//															   //
// This code is generated by a tool                            //
// https://github.com/StevenThuriot/dotnet-openapi-generator   //
//															   //
/////////////////////////////////////////////////////////////////

#nullable enable

#pragma warning disable CS8618 // Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable.

namespace CE.Assessment.Infrastructure.WebClients.ChannelEngine.Models;

[System.CodeDom.Compiler.GeneratedCode("dotnet-openapi-generator", "8.0.0-preview.15+2dc8cfca012adb9b7e1a243f167db99da7b5cfe4")]
[System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
public sealed class MerchantAddressResponse : __ICanIterate
{
    public MerchantAddressResponse() { }

    [System.Diagnostics.CodeAnalysis.SetsRequiredMembers] [System.Text.Json.Serialization.JsonConstructor] public MerchantAddressResponse(Gender gender)
    {
        Gender = gender;
    }

	public string? Line1 { get; set; }
	public string? Line2 { get; set; }
	public string? Line3 { get; set; }
	public required Gender Gender { get; set; }
	public string? CompanyName { get; set; }
	public string? FirstName { get; set; }
	public string? LastName { get; set; }
	public string? StreetName { get; set; }
	public string? HouseNr { get; set; }
	public string? HouseNrAddition { get; set; }
	public string? ZipCode { get; set; }
	public string? City { get; set; }
	public string? Region { get; set; }
	public string? CountryIso { get; set; }
	public string? Original { get; set; }

	System.Collections.Generic.IEnumerable<(string name, object? value)> __ICanIterate.IterateProperties()
	{
		yield return ("Line1", Line1);
		yield return ("Line2", Line2);
		yield return ("Line3", Line3);
		yield return ("Gender", Gender switch
		{
			Gender.MALE => "MALE",
			Gender.FEMALE => "FEMALE",
			Gender.NOT_APPLICABLE => "NOT_APPLICABLE",
			_ => null
		});
		yield return ("CompanyName", CompanyName);
		yield return ("FirstName", FirstName);
		yield return ("LastName", LastName);
		yield return ("StreetName", StreetName);
		yield return ("HouseNr", HouseNr);
		yield return ("HouseNrAddition", HouseNrAddition);
		yield return ("ZipCode", ZipCode);
		yield return ("City", City);
		yield return ("Region", Region);
		yield return ("CountryIso", CountryIso);
		yield return ("Original", Original);
	}
}
