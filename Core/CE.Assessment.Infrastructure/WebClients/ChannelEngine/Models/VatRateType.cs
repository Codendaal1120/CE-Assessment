/////////////////////////////////////////////////////////////////
//															   //
// This code is generated by a tool                            //
// https://github.com/StevenThuriot/dotnet-openapi-generator   //
//															   //
/////////////////////////////////////////////////////////////////

#nullable enable

#pragma warning disable CS8618 // Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable.

namespace CE.Assessment.Infrastructure.WebClients.ChannelEngine.Models;

[System.CodeDom.Compiler.GeneratedCode("dotnet-openapi-generator", "8.0.0-preview.15+2dc8cfca012adb9b7e1a243f167db99da7b5cfe4")]
[System.Text.Json.Serialization.JsonConverter(typeof(VatRateTypeEnumConverter))]
public enum VatRateType
{
    STANDARD,
    REDUCED,
    SUPER_REDUCED,
    EXEMPT,
}

public static class VatRateTypeFastEnum
{
    public static string ToString(VatRateType value) => value switch
    {
        VatRateType.STANDARD => "STANDARD",
        VatRateType.REDUCED => "REDUCED",
        VatRateType.SUPER_REDUCED => "SUPER_REDUCED",
        VatRateType.EXEMPT => "EXEMPT",
        _ => throw new System.NotSupportedException(value + " is not a supported Enum value")
    };

    public static VatRateType FromString(string? value) => value switch
    {
        "STANDARD" => VatRateType.STANDARD,
        "REDUCED" => VatRateType.REDUCED,
        "SUPER_REDUCED" => VatRateType.SUPER_REDUCED,
        "EXEMPT" => VatRateType.EXEMPT,
        _ => throw new System.NotSupportedException((value ?? "NULL") + " is not a supported Enum value")
    };
}

public class VatRateTypeEnumConverter : System.Text.Json.Serialization.JsonConverter<VatRateType>
{
    public override VatRateType Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options)
    {
        return VatRateTypeFastEnum.FromString(reader.GetString());
    }

    public override void Write(System.Text.Json.Utf8JsonWriter writer, VatRateType value, System.Text.Json.JsonSerializerOptions options)
    {
        writer.WriteStringValue(VatRateTypeFastEnum.ToString(value));
    }
}
