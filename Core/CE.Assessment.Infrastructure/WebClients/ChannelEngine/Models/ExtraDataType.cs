/////////////////////////////////////////////////////////////////
//															   //
// This code is generated by a tool                            //
// https://github.com/StevenThuriot/dotnet-openapi-generator   //
//															   //
/////////////////////////////////////////////////////////////////

#nullable enable

#pragma warning disable CS8618 // Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable.

namespace CE.Assessment.Infrastructure.WebClients.ChannelEngine.Models;

[System.CodeDom.Compiler.GeneratedCode("dotnet-openapi-generator", "8.0.0-preview.15+2dc8cfca012adb9b7e1a243f167db99da7b5cfe4")]
[System.Text.Json.Serialization.JsonConverter(typeof(ExtraDataTypeEnumConverter))]
public enum ExtraDataType
{
    TEXT,
    NUMBER,
    URL,
    IMAGEURL,
}

public static class ExtraDataTypeFastEnum
{
    public static string ToString(ExtraDataType value) => value switch
    {
        ExtraDataType.TEXT => "TEXT",
        ExtraDataType.NUMBER => "NUMBER",
        ExtraDataType.URL => "URL",
        ExtraDataType.IMAGEURL => "IMAGEURL",
        _ => throw new System.NotSupportedException(value + " is not a supported Enum value")
    };

    public static ExtraDataType FromString(string? value) => value switch
    {
        "TEXT" => ExtraDataType.TEXT,
        "NUMBER" => ExtraDataType.NUMBER,
        "URL" => ExtraDataType.URL,
        "IMAGEURL" => ExtraDataType.IMAGEURL,
        _ => throw new System.NotSupportedException((value ?? "NULL") + " is not a supported Enum value")
    };
}

public class ExtraDataTypeEnumConverter : System.Text.Json.Serialization.JsonConverter<ExtraDataType>
{
    public override ExtraDataType Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options)
    {
        return ExtraDataTypeFastEnum.FromString(reader.GetString());
    }

    public override void Write(System.Text.Json.Utf8JsonWriter writer, ExtraDataType value, System.Text.Json.JsonSerializerOptions options)
    {
        writer.WriteStringValue(ExtraDataTypeFastEnum.ToString(value));
    }
}
