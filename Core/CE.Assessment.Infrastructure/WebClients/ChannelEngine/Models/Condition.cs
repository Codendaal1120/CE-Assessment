/////////////////////////////////////////////////////////////////
//															   //
// This code is generated by a tool                            //
// https://github.com/StevenThuriot/dotnet-openapi-generator   //
//															   //
/////////////////////////////////////////////////////////////////

#nullable enable

#pragma warning disable CS8618 // Non-nullable variable must contain a non-null value when exiting constructor. Consider declaring it as nullable.

namespace CE.Assessment.Infrastructure.WebClients.ChannelEngine.Models;

[System.CodeDom.Compiler.GeneratedCode("dotnet-openapi-generator", "8.0.0-preview.15+2dc8cfca012adb9b7e1a243f167db99da7b5cfe4")]
[System.Text.Json.Serialization.JsonConverter(typeof(ConditionEnumConverter))]
public enum Condition
{
	@NEW,
	NEW_REFURBISHED,
	USED_AS_NEW,
	USED_GOOD,
	USED_REASONABLE,
	USED_MEDIOCRE,
	UNKNOWN,
	USED_VERY_GOOD,
}

public static class ConditionFastEnum
{
     public static string ToString(Condition value) => value switch
     {
         Condition.@NEW => "NEW",
         Condition.NEW_REFURBISHED => "NEW_REFURBISHED",
         Condition.USED_AS_NEW => "USED_AS_NEW",
         Condition.USED_GOOD => "USED_GOOD",
         Condition.USED_REASONABLE => "USED_REASONABLE",
         Condition.USED_MEDIOCRE => "USED_MEDIOCRE",
         Condition.UNKNOWN => "UNKNOWN",
         Condition.USED_VERY_GOOD => "USED_VERY_GOOD",
         _ => throw new System.NotSupportedException(value + " is not a supported Enum value")
     };

     public static Condition FromString(string? value) => value switch
     {
         "NEW" => Condition.@NEW,
         "NEW_REFURBISHED" => Condition.NEW_REFURBISHED,
         "USED_AS_NEW" => Condition.USED_AS_NEW,
         "USED_GOOD" => Condition.USED_GOOD,
         "USED_REASONABLE" => Condition.USED_REASONABLE,
         "USED_MEDIOCRE" => Condition.USED_MEDIOCRE,
         "UNKNOWN" => Condition.UNKNOWN,
         "USED_VERY_GOOD" => Condition.USED_VERY_GOOD,
         _ => throw new System.NotSupportedException((value ?? "NULL") + " is not a supported Enum value")
     };
}

public class ConditionEnumConverter : System.Text.Json.Serialization.JsonConverter<Condition>
{
    public override Condition Read(ref System.Text.Json.Utf8JsonReader reader, System.Type typeToConvert, System.Text.Json.JsonSerializerOptions options)
    {
        return ConditionFastEnum.FromString(reader.GetString());
    }

    public override void Write(System.Text.Json.Utf8JsonWriter writer, Condition value, System.Text.Json.JsonSerializerOptions options)
    {
        writer.WriteStringValue(ConditionFastEnum.ToString(value));
    }
}
